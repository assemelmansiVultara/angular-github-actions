name: Angular S3 Deploy

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Checkout
      uses: actions/checkout@v3

    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@v2
      id: vultara-deployment
      with:
        token: '${{ github.token }}'
        environment: production
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Build app
      run: npm run build

    - name: Deploy to S3
      if: success()
      run: aws s3 sync ./dist/angular-github-actions s3://angular-github-actions --delete

    - name: CloudFront Invalidation
      if: success()
      run: |
        aws configure set preview.cloudfront true
        aws cloudfront create-invalidation --distribution-id E1XZQXZQXZQXZQ --paths "/index.html"

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
        state: 'success'

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
        state: 'failure'